model User {
  id              Int           @id @default(autoincrement())
  name            String
  email           String        @db.VarChar(255)
  contact_details Json?
  enrollments     enrollments[]
  courses         courses[]
}

model courses {
  id          Int            @id @default(autoincrement())
  title       String
  enabled     Boolean        @default(true)
  thumbnail   String?
  creator_id  Int
  creator     users          @relation(fields: [creator_id], references: [id], onDelete: Cascade)
  topics      topics[]
  course_tags courses_tags[]
  enrollments enrollments[]
}

model tags {
  id          Int            @id @default(autoincrement())
  name        String         @unique
  course_tags courses_tags[]
}

model courses_tags {
  id        Int     @id @default(autoincrement())
  course    courses @relation(fields: [course_id], references: [id], onDelete: Cascade)
  course_id Int
  tag       tags    @relation(fields: [tag_id], references: [id], onDelete: Cascade)
  tag_id    Int

  @@unique([course_id, tag_id])
}

model topics {
  id        Int       @id @default(autoincrement())
  course_id Int
  title     String
  course    courses   @relation(fields: [course_id], references: [id], onDelete: Cascade)
  quizzes   quizzes[]
  content   content[]
}

model content {
  id             Int          @id @default(autoincrement())
  title          String
  type           content_type
  content        String?
  topic          topics       @relation(fields: [topic_id], references: [id], onDelete: Cascade)
  topic_id       Int
  topic_position Int
}

enum content_type {
  TEXT
  VIDEO
}

model quizzes {
  id             Int         @id @default(autoincrement())
  topic_id       Int
  title          String
  topic          topics      @relation(fields: [topic_id], references: [id], onDelete: Cascade)
  questions      questions[]
  topic_position Int

}

model Question {
  id            Int      @id @default(autoincrement())
  question_text String
  explanation   String?
  quiz          quizzes   @relation(fields: [quiz_id], references: [id], onDelete: Cascade)
  choices       choices[]
}

model Choice {
  id          Int      @id @default(autoincrement())
  choice_text String
  is_correct  Boolean   @default(false)
  question    questions @relation(fields: [question_id], references: [id], onDelete: Cascade)
}

model Enrollments {
  id        Int    @id @default(autoincrement())
  user_id   Int
  course_id Int
  user      users   @relation(fields: [user_id], references: [id], onDelete: Cascade)
  course    courses @relation(fields: [course_id], references: [id], onDelete: Cascade)
}
